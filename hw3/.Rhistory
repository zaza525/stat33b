# Display code in the knitted document.
# DO NOT CHANGE THIS LINE!
knitr::opts_chunk$set(echo = TRUE)
# Your code goes here.
read.csv('day.csv')
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day
as.logical(bike_day$holiday)
bike_day
bike_day$holiday = as.logical(bike_day$holiday)
bike_day
bike_day$workingday = as.logical(bike_day$workingday)
bike_day
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day
bike_day[bike_day$year == 0]$year = 2011
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day[bike_day$year == 0]$year = 2011
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day[bike_day$year == 0]$year = 2011
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day[bike_day$year == 0]$year = 2011
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day[bike_day$year == 0]$year = 2011
bike_day
bike_day[bike_day$year == 0]$year <-2011
bike_day
bike_day[bike_day$year == 0, ]$year <-2011
bike_day
bike_day[bike_day$year == 0, ]$year = 2011
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day[bike_day$year == 0, ]$year = 2011
bike_day[bike_day$year = 0, ]$year = 2011
bike_day[bike_day$year == 0, ]$year = 2011
bike_day$year[bike_day$year == 0, ] = 2011
bike_day$year[bike_day$year == 0, ] = 2011
bike_day$year[bike_day$year == 0] = 2011
bike_day$year[bike_day$year == 0] <- 2011
bike_day$yr[bike_day$yr == 0] <- 2011
bike_day
bike_day$yr[bike_day$yr == 1] = 2012
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day$yr[bike_day$yr == 0] = 2011
bike_day$yr[bike_day$yr == 1] = 2012
bike_day
bike_day$yr[bike_day$yr == 0] = 2011L
bike_day$yr[bike_day$yr == 1] = 2012L
bike_day
bike_day$yr[bike_day$yr == 0] = as.integer(2011)
bike_day$yr[bike_day$yr == 1] = as.integer(2012)
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day$yr[bike_day$yr == 0] = as.integer(2011)
bike_day$yr[bike_day$yr == 1] = as.integer(2012)
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day$yr[bike_day$yr == 0] = as.integer(2011)
bike_day$yr[bike_day$yr == 1] = as.integer(2012)
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day$yr[bike_day$yr == 0] = as.integer(2011)
bike_day$yr[bike_day$yr == 1] = as.integer(2012)
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day$yr[bike_day$yr == 0] = 2011L
bike_day$yr[bike_day$yr == 1] = 2012L
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day$yr[bike_day$yr == 0] = 2011L
bike_day$yr[bike_day$yr == 1] = 2012L
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day$yr[bike_day$yr == 0] = 2011L
bike_day$yr[bike_day$yr == 1] = 2012L
bike_day
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day$yr[bike_day$yr == 0] = 2011L
bike_day$yr[bike_day$yr == 1] = 2012L
bike_day
# Your code goes here.
bike = read.csv('hour.csv')
# Your code goes here.
bike = read.csv('hour.csv')
bike
# Your code goes here.
bike = read.csv('hour.csv')
bike$holiday = as.logical(bike$holiday)
bike$workingday = as.logical(bike$workingday)
bike$season = factor(bike$season)
bike$weekday = factor(bike$weekday)
bike$weathersit = factor(bike$weathersit)
bike$dteday = as.Date(bike$dteday)
bike$yr[bike$yr == 0] = 2011L
bike$yr[bike$yr == 1] = 2012L
bike
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day$yr[bike_day$yr == 0] = 2011L
bike_day$yr[bike_day$yr == 1] = 2012L
bike_day
# Your code goes here.
bike = read.csv('hour.csv')
bike$holiday = as.logical(bike$holiday)
bike$workingday = as.logical(bike$workingday)
bike$season = factor(bike$season)
bike$weekday = factor(bike$weekday)
bike$weathersit = factor(bike$weathersit)
bike$dteday = as.Date(bike$dteday)
bike$yr[bike$yr == 0] = 2011L
bike$yr[bike$yr == 1] = 2012L
bike
# Your code goes here.
bike_day = read.csv('day.csv')
bike_day$holiday = as.logical(bike_day$holiday)
bike_day$workingday = as.logical(bike_day$workingday)
bike_day$season = factor(bike_day$season)
bike_day$weekday = factor(bike_day$weekday)
bike_day$weathersit = factor(bike_day$weathersit)
bike_day$dteday = as.Date(bike_day$dteday)
bike_day$yr[bike_day$yr == 0] = 2011L
bike_day$yr[bike_day$yr == 1] = 2012L
bike_day
# Your code goes here.
library(ggplot2)
ggplot(bike_day, aes(x = casual, y = registered))  +
geom_density_2d()
ggplot(bike_day, aes(x = casual, y = registered))  +
geom_density_2d(color = workingday)
ggplot(bike_day, aes(x = casual, y = registered))  +
geom_density_2d(color = bike_day$workingday)
ggplot(bike_day, aes(x = casual, y = registered))  +
geom_density_2d(aes(color = workingday))
# Your code goes here.
library(ggplot2)
ggplot(bike_day, aes(x = casual, y = registered))  +
geom_density_2d(aes(color = workingday))
# Your code goes here.
library(ggplot2)
ggplot(bike_day, aes(x = casual, y = registered))  +
geom_density_2d(aes(color = workingday)) + labs(title = "The contour plot if rides that took place on working days and non-working days")
# Your code goes here.
ggplot(bike_day, aes(bike_day$weathersit, bike_day$cnt))+geom_boxplot()
# Your code goes here.
ggplot(bike_day, aes(bike_day$weathersit, bike_day$cnt))+geom_boxplot() + gglabel("2")
# Your code goes here.
ggplot(bike_day, aes(bike_day$weathersit, bike_day$cnt))+geom_boxplot() + ggtitle(
"The distribution of relationship between weather and number of riders"
)
library(tidyr)
table2
pivot_wider(table2, names_from = type, values_from = count)
# You may need to install the package first:
install.packages("tidyr")
# Load the package:
library(tidyr)
install.packages("tidyr")
# Included with tidyr:
table1
# Included with tidyr:
table1
# You may need to install the package first:
install.packages("tidyr")
# Load the package:
library(tidyr)
# Included with tidyr:
table1
# Included with tidyr:
table2
pivot_wider(table2, names_from = type, values_from = count)
# Step 1
cases = table2[table2$type == "cases", ]
pop = table2[table2$type == "population", ]
pop
# Step 2
cases = cases[-3]
pop = pop[-3]
# Step 3
names(pop)[3] = "population"
names(cases)[3] = "cases"
pop
cases
# Risky way to do step 4:
cbind(pop, cases)
# Okay for this data set, because rows line up in country and year.
#
# Other data sets might not have rows that line up.
We'll see a better way to do step 4 later.
table4a
library(tidyr)
table2
pivot_wider(table2, names_from = type, values_from = count)
table4a
table4a[-1]
table4a[1]
table4a[-1]
pivot_longer(table4a, -country, names_to = "year", values_to = "cases")
# Display code in the knitted document.
# DO NOT CHANGE THIS LINE!
knitr::opts_chunk$set(echo = TRUE)
# Your code goes here.
bike
# Your code goes here.
pivot_longer(table2, names_to = "weekday", values_to = "count")
# Included with tidyr:
table1
# Included with tidyr:
table2
table4a
pivot_longer(table4a, -country, names_to = "year", values_to = "cases")
# Your code goes here.
bike
b = bike[workingday]
b = bike[1:2]
b
bike
b = bike[, 1]
b
b = bike[, [1, 2]]
b
b = bike[, c(1, 2)]
b
b = bike[, c(1, 2, 3)]
b
b = bike[, "season"]
b
b = bike[, c("yr", "season")]
b
bike
b = bike[, c("hr", "weekday", "casual", "registered", "cnt")]
b
bike
b = bike[, c("instant", "hr", "weekday", "casual", "registered", "cnt")]
b
pivot_wider(b,c("casual", "registered", "cnt"), names_to = "rider", values_to = "count")
# Your code goes here.
bike
b = bike[, c("instant", "hr", "weekday", "casual", "registered", "cnt")]
b
bike
pivot_wider(b,c("casual", "registered", "cnt"), names_to = "rider", values_to = "count")
pivot_longer(b,c("casual", "registered", "cnt"), names_to = "rider", values_to = "count")
# Your code goes here.
b = bike[, c("instant", "hr", "weekday", "casual", "registered", "cnt")]
bike_stack = pivot_longer(b,c("casual", "registered", "cnt"), names_to = "rider", values_to = "count")
bike_stack
ggplot(bike_stack, aes(x = weekday, y = count)) + geom_smooth()
# Your code goes here.
library(ggplot2)
b = bike[, c("instant", "hr", "weekday", "casual", "registered", "cnt")]
bike_stack = pivot_longer(b,c("casual", "registered", "cnt"), names_to = "rider", values_to = "count")
bike_stack
ggplot(bike_stack, aes(x = weekday, y = count)) + geom_smooth()
ggplot(bike_stack, aes(x = hr, y = count)) + geom_smooth()
bike_stack$hr = factor(bike_stack$hr)
bike_stack
ggplot(bike_stack, aes(x = hr, y = count)) + geom_smooth()
# Your code goes here.
library(ggplot2)
b = bike[, c("instant", "hr", "weekday", "casual", "registered", "cnt")]
bike_stack = pivot_longer(b,c("casual", "registered", "cnt"), names_to = "rider", values_to = "count")
bike_stack
ggplot(bike_stack, aes(x = hr, y = count)) + geom_smooth()
ggplot(bike_stack, aes(x = hr, y = count)) + geom_smooth(aes(color = rider))
# Your code goes here.
library(ggplot2)
library(tidyr)
b = bike[, c("instant", "hr", "weekday", "casual", "registered", "cnt")]
bike_stack = pivot_longer(b,c("casual", "registered", "cnt"), names_to = "rider", values_to = "count")
bike_stack
ggplot(bike_stack, aes(x = hr, y = count)) + geom_smooth(aes(color = rider))
